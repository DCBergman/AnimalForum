[{"C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\components\\Subforum.js":"4","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\context\\ForumContextProvider.js":"5","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\components\\Thread.js":"6","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\pages\\ThreadsList.js":"7"},{"size":547,"mtime":1609082025439,"results":"8","hashOfConfig":"9"},{"size":669,"mtime":1609182430364,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1241,"mtime":1609182350008,"results":"12","hashOfConfig":"9"},{"size":869,"mtime":1609173964047,"results":"13","hashOfConfig":"9"},{"size":925,"mtime":1609252448754,"results":"14","hashOfConfig":"9"},{"size":976,"mtime":1609251644627,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"etiz7t",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\index.js",[],["35","36"],"C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\App.js",[],"C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\components\\Subforum.js",["37","38"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Card  } from \"reactstrap\";\r\nimport { ForumContext } from \"../context/ForumContextProvider\";\r\nimport \"../index.css\";\r\n\r\nconst Subforum = (props) => {\r\n  const forumContext = useContext(ForumContext);\r\n  const [subforums, setSubforums] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchAllSubforums();\r\n  }, []);\r\n\r\n  const fetchAllSubforums = async () => {\r\n    let allSubforums = await fetch(\"http://localhost:3000/api/subforums\");\r\n    console.log(allSubforums);\r\n    setSubforums(await allSubforums.json());\r\n  };\r\n\r\n  function redirect (id) {\r\n    console.log(id);\r\n    history.push('/threads/' + id);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(subforums, \" \", forumContext.subforums);\r\n  }, [subforums]);\r\n\r\n  return (\r\n    <div className=\"sf-div\">\r\n      {subforums.map((s, i) => (\r\n        <Card\r\n          body\r\n          outline\r\n          color=\"secondary\"\r\n          key={i}\r\n          className=\"subforum-card\"\r\n          onClick={() => redirect(s.id)}\r\n        >\r\n          {s.title}\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Subforum;\r\n","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\context\\ForumContextProvider.js",["39","40"],"import React, { createContext, useState } from \"react\";\r\nexport const ForumContext = createContext();\r\n\r\n\r\nconst ForumContextProvider = (props) => {\r\n  const [subforums, setSubforums] = useState([]); \r\n  const [threads, setThreads] = useState([]); \r\n  const [currentSubforum, setCurrentSubforum] = useState(null);\r\n\r\n  const fetchAllSubforums = async () => {\r\n    let subforums = await fetch(\"localhost:3000/api/subforums\");\r\n    console.log(\"context \", subforums);\r\n    subforums = await subforums.json(); \r\n\r\n    console.log(\"context \", subforums);\r\n    setSubforums(subforums)\r\n  };\r\n\r\n  const values = {\r\n    subforums,\r\n    currentSubforum, \r\n    fetchAllSubforums,\r\n    setCurrentSubforum,\r\n  };\r\n\r\n  return (\r\n    <ForumContext.Provider value={values}>\r\n      {props.children}\r\n    </ForumContext.Provider>\r\n  );\r\n\r\n\r\n\r\n};\r\n\r\nexport default ForumContextProvider;","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\components\\Thread.js",["41","42","43","44"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Card  } from \"reactstrap\";\r\nimport { ForumContext } from \"../context/ForumContextProvider\";\r\nimport \"../index.css\";\r\n\r\nconst Thread = (props) => {\r\n  const [creator, setCreator] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    getCreator();\r\n    console.log(props.thread);\r\n  },[])\r\n\r\n  const getCreator = async() =>{\r\n        let fetchedCreator = await fetch(\"http://localhost:3000/api/users/\" + props.thread.creator);\r\n        console.log(fetchedCreator.username);\r\n        setCreator(await fetchedCreator.json());\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"thread-div\">\r\n      <p className=\"thread-title\">{props.thread.title}</p>\r\n      <div className=\"thread-bottom-row\">\r\n        <p className=\"thread-date\">{props.thread.date}</p>\r\n        <p className=\"thread-creator\">{creator.username}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Thread; ","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\pages\\ThreadsList.js",["45","46","47","48"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Card  } from \"reactstrap\";\r\nimport Thread from \"../components/Thread\";\r\nimport { ForumContext } from \"../context/ForumContextProvider\";\r\nimport \"../index.css\";\r\n\r\nconst ThreadsList = (props) => {  \r\n  const [threads, setThreads] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchAllThreadsFromSubforum();\r\n  },[])\r\n\r\n  const fetchAllThreadsFromSubforum = async () => {\r\n        let threads = await fetch(\r\n          \"http://localhost:3000/api/subforums/threads/\" +\r\n            props.match.params.subforumId\r\n        );\r\n        console.log(\"context \", threads);\r\n        threads = await threads.json();\r\n\r\n        console.log(threads);\r\n        setThreads(threads);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(threads);\r\n  },[threads])\r\n\r\nreturn(\r\n  <div className=\"threads-list\">\r\n    {threads.map((t, i) => (\r\n      <Thread key={i} thread={t}/>\r\n    ))}\r\n  </div>\r\n)\r\n}\r\nexport default ThreadsList; ",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":18},{"ruleId":"57","severity":1,"message":"58","line":30,"column":6,"nodeType":"59","endLine":30,"endColumn":17,"suggestions":"60"},{"ruleId":"53","severity":1,"message":"61","line":7,"column":10,"nodeType":"55","messageId":"56","endLine":7,"endColumn":17},{"ruleId":"53","severity":1,"message":"62","line":7,"column":19,"nodeType":"55","messageId":"56","endLine":7,"endColumn":29},{"ruleId":"53","severity":1,"message":"63","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":27},{"ruleId":"53","severity":1,"message":"64","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":14},{"ruleId":"53","severity":1,"message":"65","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":22},{"ruleId":"57","severity":1,"message":"66","line":12,"column":5,"nodeType":"59","endLine":12,"endColumn":7,"suggestions":"67"},{"ruleId":"53","severity":1,"message":"63","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":27},{"ruleId":"53","severity":1,"message":"64","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":14},{"ruleId":"53","severity":1,"message":"65","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":22},{"ruleId":"57","severity":1,"message":"68","line":12,"column":5,"nodeType":"59","endLine":12,"endColumn":7,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'forumContext.subforums'. Either include it or remove the dependency array.","ArrayExpression",["72"],"'threads' is assigned a value but never used.","'setThreads' is assigned a value but never used.","'useContext' is defined but never used.","'Card' is defined but never used.","'ForumContext' is defined but never used.","React Hook useEffect has missing dependencies: 'getCreator' and 'props.thread'. Either include them or remove the dependency array.",["73"],"React Hook useEffect has a missing dependency: 'fetchAllThreadsFromSubforum'. Either include it or remove the dependency array.",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [forumContext.subforums, subforums]",{"range":"81","text":"82"},"Update the dependencies array to be: [getCreator, props.thread]",{"range":"83","text":"84"},"Update the dependencies array to be: [fetchAllThreadsFromSubforum]",{"range":"85","text":"86"},[863,874],"[forumContext.subforums, subforums]",[345,347],"[getCreator, props.thread]",[383,385],"[fetchAllThreadsFromSubforum]"]