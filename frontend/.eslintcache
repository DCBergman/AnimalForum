[{"C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\components\\Subforum.js":"4","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\context\\ForumContextProvider.js":"5","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\components\\Thread.js":"6","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\pages\\ThreadsList.js":"7","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\components\\Header.js":"8","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\components\\RegisterAccount.js":"9"},{"size":547,"mtime":1609082025439,"results":"10","hashOfConfig":"11"},{"size":868,"mtime":1609325329222,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1241,"mtime":1609182350008,"results":"14","hashOfConfig":"11"},{"size":869,"mtime":1609173964047,"results":"15","hashOfConfig":"11"},{"size":925,"mtime":1609252448754,"results":"16","hashOfConfig":"11"},{"size":976,"mtime":1609251644627,"results":"17","hashOfConfig":"11"},{"size":223,"mtime":1609321245236,"results":"18","hashOfConfig":"11"},{"size":3198,"mtime":1609332828632,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"etiz7t",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\index.js",[],["44","45"],"C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\App.js",[],"C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\components\\Subforum.js",["46","47"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Card  } from \"reactstrap\";\r\nimport { ForumContext } from \"../context/ForumContextProvider\";\r\nimport \"../index.css\";\r\n\r\nconst Subforum = (props) => {\r\n  const forumContext = useContext(ForumContext);\r\n  const [subforums, setSubforums] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchAllSubforums();\r\n  }, []);\r\n\r\n  const fetchAllSubforums = async () => {\r\n    let allSubforums = await fetch(\"http://localhost:3000/api/subforums\");\r\n    console.log(allSubforums);\r\n    setSubforums(await allSubforums.json());\r\n  };\r\n\r\n  function redirect (id) {\r\n    console.log(id);\r\n    history.push('/threads/' + id);\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(subforums, \" \", forumContext.subforums);\r\n  }, [subforums]);\r\n\r\n  return (\r\n    <div className=\"sf-div\">\r\n      {subforums.map((s, i) => (\r\n        <Card\r\n          body\r\n          outline\r\n          color=\"secondary\"\r\n          key={i}\r\n          className=\"subforum-card\"\r\n          onClick={() => redirect(s.id)}\r\n        >\r\n          {s.title}\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Subforum;\r\n","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\context\\ForumContextProvider.js",["48","49"],"import React, { createContext, useState } from \"react\";\r\nexport const ForumContext = createContext();\r\n\r\n\r\nconst ForumContextProvider = (props) => {\r\n  const [subforums, setSubforums] = useState([]); \r\n  const [threads, setThreads] = useState([]); \r\n  const [currentSubforum, setCurrentSubforum] = useState(null);\r\n\r\n  const fetchAllSubforums = async () => {\r\n    let subforums = await fetch(\"localhost:3000/api/subforums\");\r\n    console.log(\"context \", subforums);\r\n    subforums = await subforums.json(); \r\n\r\n    console.log(\"context \", subforums);\r\n    setSubforums(subforums)\r\n  };\r\n\r\n  const values = {\r\n    subforums,\r\n    currentSubforum, \r\n    fetchAllSubforums,\r\n    setCurrentSubforum,\r\n  };\r\n\r\n  return (\r\n    <ForumContext.Provider value={values}>\r\n      {props.children}\r\n    </ForumContext.Provider>\r\n  );\r\n\r\n\r\n\r\n};\r\n\r\nexport default ForumContextProvider;","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\components\\Thread.js",["50","51","52","53"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Card  } from \"reactstrap\";\r\nimport { ForumContext } from \"../context/ForumContextProvider\";\r\nimport \"../index.css\";\r\n\r\nconst Thread = (props) => {\r\n  const [creator, setCreator] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    getCreator();\r\n    console.log(props.thread);\r\n  },[])\r\n\r\n  const getCreator = async() =>{\r\n        let fetchedCreator = await fetch(\"http://localhost:3000/api/users/\" + props.thread.creator);\r\n        console.log(fetchedCreator.username);\r\n        setCreator(await fetchedCreator.json());\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"thread-div\">\r\n      <p className=\"thread-title\">{props.thread.title}</p>\r\n      <div className=\"thread-bottom-row\">\r\n        <p className=\"thread-date\">{props.thread.date}</p>\r\n        <p className=\"thread-creator\">{creator.username}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Thread; ","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\pages\\ThreadsList.js",["54","55","56","57"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Card  } from \"reactstrap\";\r\nimport Thread from \"../components/Thread\";\r\nimport { ForumContext } from \"../context/ForumContextProvider\";\r\nimport \"../index.css\";\r\n\r\nconst ThreadsList = (props) => {  \r\n  const [threads, setThreads] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchAllThreadsFromSubforum();\r\n  },[])\r\n\r\n  const fetchAllThreadsFromSubforum = async () => {\r\n        let threads = await fetch(\r\n          \"http://localhost:3000/api/subforums/threads/\" +\r\n            props.match.params.subforumId\r\n        );\r\n        console.log(\"context \", threads);\r\n        threads = await threads.json();\r\n\r\n        console.log(threads);\r\n        setThreads(threads);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(threads);\r\n  },[threads])\r\n\r\nreturn(\r\n  <div className=\"threads-list\">\r\n    {threads.map((t, i) => (\r\n      <Thread key={i} thread={t}/>\r\n    ))}\r\n  </div>\r\n)\r\n}\r\nexport default ThreadsList; ","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\components\\Header.js",["58","59","60"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"../index.css\";\r\n\r\nconst Header = (props) => {\r\n\r\n\r\nreturn(\r\n  <div className=\"header-div\">\r\n    Animal Forum\r\n  </div>\r\n);\r\n}\r\nexport default Header; ","C:\\Users\\Admin\\Desktop\\Javautveckling\\Java security\\AnimalForum\\frontend\\src\\components\\RegisterAccount.js",["61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":18},{"ruleId":"71","severity":1,"message":"72","line":30,"column":6,"nodeType":"73","endLine":30,"endColumn":17,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"75","line":7,"column":10,"nodeType":"69","messageId":"70","endLine":7,"endColumn":17},{"ruleId":"67","severity":1,"message":"76","line":7,"column":19,"nodeType":"69","messageId":"70","endLine":7,"endColumn":29},{"ruleId":"67","severity":1,"message":"77","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":27},{"ruleId":"67","severity":1,"message":"78","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"67","severity":1,"message":"79","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":22},{"ruleId":"71","severity":1,"message":"80","line":12,"column":5,"nodeType":"73","endLine":12,"endColumn":7,"suggestions":"81"},{"ruleId":"67","severity":1,"message":"77","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":27},{"ruleId":"67","severity":1,"message":"78","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"67","severity":1,"message":"79","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":22},{"ruleId":"71","severity":1,"message":"82","line":12,"column":5,"nodeType":"73","endLine":12,"endColumn":7,"suggestions":"83"},{"ruleId":"67","severity":1,"message":"77","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":27},{"ruleId":"67","severity":1,"message":"84","line":1,"column":29,"nodeType":"69","messageId":"70","endLine":1,"endColumn":38},{"ruleId":"67","severity":1,"message":"85","line":1,"column":40,"nodeType":"69","messageId":"70","endLine":1,"endColumn":48},{"ruleId":"67","severity":1,"message":"77","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":27},{"ruleId":"67","severity":1,"message":"84","line":1,"column":29,"nodeType":"69","messageId":"70","endLine":1,"endColumn":38},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'forumContext.subforums'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'threads' is assigned a value but never used.","'setThreads' is assigned a value but never used.","'useContext' is defined but never used.","'Card' is defined but never used.","'ForumContext' is defined but never used.","React Hook useEffect has missing dependencies: 'getCreator' and 'props.thread'. Either include them or remove the dependency array.",["89"],"React Hook useEffect has a missing dependency: 'fetchAllThreadsFromSubforum'. Either include it or remove the dependency array.",["90"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [forumContext.subforums, subforums]",{"range":"97","text":"98"},"Update the dependencies array to be: [getCreator, props.thread]",{"range":"99","text":"100"},"Update the dependencies array to be: [fetchAllThreadsFromSubforum]",{"range":"101","text":"102"},[863,874],"[forumContext.subforums, subforums]",[345,347],"[getCreator, props.thread]",[383,385],"[fetchAllThreadsFromSubforum]"]